# Generated by Django 4.1.9 on 2023-08-17 20:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app_tracker', '0010_application_project_board_url'),
    ]

    operations = [
        migrations.AddField(
            model_name='application',
            name='is_template_repository',
            field=models.BooleanField(default=False, help_text="Whether or not the application's repository is a template repository.", verbose_name='Is Template Repository'),
        ),
        migrations.AlterField(
            model_name='application',
            name='description',
            field=models.TextField(blank=True, help_text='The description of the application.', null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='application',
            name='has_custom_user',
            field=models.BooleanField(default=False, help_text='Whether or not the application has a custom user model.', verbose_name='Has Custom User'),
        ),
        migrations.AlterField(
            model_name='application',
            name='has_email_sending',
            field=models.BooleanField(default=False, help_text='Whether or not the application has email sending capabilities.', verbose_name='Has Email Sending'),
        ),
        migrations.AlterField(
            model_name='application',
            name='has_prod_deployment',
            field=models.BooleanField(default=False, help_text='Whether or not the application has a production deployment.', verbose_name='Has Production Deployment'),
        ),
        migrations.AlterField(
            model_name='application',
            name='has_sticky_footer',
            field=models.BooleanField(default=False, help_text='Whether or not the application has a sticky footer.', verbose_name='Has Sticky Footer'),
        ),
        migrations.AlterField(
            model_name='application',
            name='language_framework_systems',
            field=models.ManyToManyField(help_text='The languages, frameworks, and systems used in the application.', related_name='applications', to='app_tracker.languageframeworksystem', verbose_name='Language/Framework/Systems'),
        ),
        migrations.AlterField(
            model_name='application',
            name='name',
            field=models.CharField(help_text='The name of the application.', max_length=255, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='application',
            name='production_url',
            field=models.URLField(blank=True, help_text="The URL of the application's production deployment.", null=True, verbose_name='Production URL'),
        ),
        migrations.AlterField(
            model_name='application',
            name='project_board_url',
            field=models.URLField(blank=True, help_text="The URL of the application's project board.", null=True, verbose_name='Project Board URL'),
        ),
        migrations.AlterField(
            model_name='application',
            name='repository_is_public',
            field=models.BooleanField(default=False, help_text="Whether or not the application's repository is public.", verbose_name='Repository is Public'),
        ),
        migrations.AlterField(
            model_name='application',
            name='repository_url',
            field=models.URLField(blank=True, help_text="The URL of the application's repository.", null=True, verbose_name='Repository URL'),
        ),
        migrations.AlterField(
            model_name='application',
            name='testing_level',
            field=models.CharField(blank=True, choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('none', 'None')], help_text='The relative amount of testing coverage for the application.', max_length=6, null=True, verbose_name='Testing Level'),
        ),
        migrations.AlterField(
            model_name='djangomodel',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='django_models', to='app_tracker.application', verbose_name='Application'),
        ),
        migrations.AlterField(
            model_name='djangomodel',
            name='description',
            field=models.TextField(help_text='The description of the Django model.', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='djangomodel',
            name='is_current_model',
            field=models.BooleanField(default=False, help_text="'True' if this model is currently used in the application, 'False' if this model is not currently used in the application.", verbose_name='Is Current Model'),
        ),
        migrations.AlterField(
            model_name='djangomodel',
            name='name',
            field=models.CharField(help_text='The name of the Django model.', max_length=255, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='languageframeworksystem',
            name='name',
            field=models.CharField(help_text='The name of the language, framework, or system used in the application.', max_length=30, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='note',
            name='application',
            field=models.ForeignKey(blank=True, help_text='The application that the note is associated with.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='app_tracker.application'),
        ),
    ]
